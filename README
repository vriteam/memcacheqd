Hi buddy,
    This a high-performance in-memory queue service.
    I developed it at 2011. Memcached is so popular.
    We needed a queue to handle our backgroupnd jobs.
    I've tried some, but they did not fit our system quite well.
    So I decided to develop one based on memcached by myself.
    Sounds funny right?. So yeah I did it.
    There is a lot of adventage of memcached protocol.
    For example, client do not need a new lib for this service.
    Just memcached protocol's fine.
    And the performance is increditable.
    So we deployed it into our system and enjoy it.
    This is the latest version.
    Hope you enjoy it.

Dependencies:

   -- libevent, http://www.monkey.org/~provos/libevent/ (libevent-dev)

If using Linux, you need a kernel with epoll.  Sure, libevent will
work with normal select, but it sucks.

epoll isn't in Linux 2.4, but there's a backport at:

    http://www.xmailserver.org/linux-patches/nio-improve.html

You want the epoll-lt patch (level-triggered).

If you're using MacOS, you'll want libevent 1.1 or higher to deal with
a kqueue bug.

Also, be warned that the -k (mlockall) option to memcached might be
dangerous when using a large cache.  Just make sure the memcached machines
don't swap.  memcached does non-blocking network I/O, but not disk.  (it
should never go to disk, or you've lost the whole point of it)

The memcached website is at:

    http://www.memcached.org

Want to contribute?  Up-to-date pointers should be at:

    http://contributing.appspot.com/memcached
